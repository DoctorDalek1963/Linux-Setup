#!/usr/bin/env bash

CheckWithWhichAndInstallWithAPT() {
	# Redirect stdout and stderr to /dev/null to avoid outputting anything to the terminal
	which $1 &> /dev/null || sudo apt install -y $1
}

OptionalMkdir() {
	# If the directory doesn't exist, make it
	if [ ! -d "$1" ]; then
		mkdir -p -- "$1"
	fi
}

GetFontZip() {
	wget "$1"
	OptionalMkdir ~/.fonts
	unzip -u -j "$2" -d ~/.fonts
	rm "$2"
}

AllFonts() {
	# Hack
	GetFontZip https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.zip Hack-v3.003-ttf.zip
	# Hack Nerd Font
	GetFontZip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip Hack.zip
}

AllFiles() {
	cp Files/.vimrc ~
	cp Files/.ideavimrc ~
	cp Files/.bash_aliases ~ && source ~/.bash_aliases
	cp Files/.bashrc ~ && source ~/.bashrc
	cp Files/.gitconfig ~
	cp Files/.tern-config ~
	cp Files/.pylintrc ~
	cp Files/.XCompose ~

	OptionalMkdir ~/.ipython/profile_default
	cp Files/ipython_config.py ~/.ipython/profile_default/ipython_config.py

	OptionalMkdir ~/.julia/config
	cp Files/startup.jl ~/.julia/config/startup.jl

	OptionalMkdir ~/.sage
	cp Files/init.sage ~/.sage/init.sage

	OptionalMkdir ~/.config/neofetch
	cp Files/neofetch_config ~/.config/neofetch/config.conf

	OptionalMkdir ~/.config/terminator
	cp Files/terminator_config ~/.config/terminator/config

	OptionalMkdir ~/.config/nvim
	cp Files/init.vim ~/.config/nvim/init.vim
	cp Files/coc-settings.json ~/.config/nvim/coc-settings.json

	cp -r Files/UltiSnips ~/.config/nvim/
}

MiscSoftware() {
	CheckWithWhichAndInstallWithAPT neofetch
	CheckWithWhichAndInstallWithAPT terminator
	CheckWithWhichAndInstallWithAPT bat

	which fuck &> /dev/null || sudo pip3 install thefuck

	which exa &> /dev/null
	if [ $? -ne 0 ]; then
		# Install rustup if necessary
		which rustc &> /dev/null
		if [ $? -ne 0 ]; then
			curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
		fi

		cargo install exa
	fi

	which unimatrix &> /dev/null
	if [ $? -eq 0 ]; then
		sudo curl -L https://raw.githubusercontent.com/will8211/unimatrix/master/unimatrix.py -o /usr/local/bin/unimatrix
		sudo chmod a+rx /usr/local/bin/unimatrix
	fi
}

InstallVimPlug() {
	CheckWithWhichAndInstallWithAPT curl

	# Install vim-plug in autoload directory
	curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
}

InstallAndUpdateVimPlugins() {
	nvim -c "PlugInstall" -c "qa!"
	nvim -c "PlugUpdate" -c "qa!"
}

InstallLanguageServers() {
	npm i -g bash-language-server
	npm install -g dockerfile-language-server-nodejs
	which ghcup &> /dev/null && ghcup install hls
	which julia &> /dev/null && julia -e "using Pkg;Pkg.add(\"LanguageServer\");Pkg.add(\"SymbolServer\");Pkg.add(\"StaticLint\")"
	pip install 'python-language-server[all]'
	CheckWithWhichAndInstallWithAPT ccls
}

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
	echo
	echo "$(<Files/setup_help)" # Read the help from a file. This is in quotes to allow for line breaks
	echo
	exit 0
fi

# If no arguments are supplied
if [ $# -eq 0 ]; then
	echo "setup must be suplied with at least one valid argument. See --help or -h for all arguments."
	exit 1
fi

# This is just a big ol' switch statement
while [ $# -ne 0 ]; do
	case "$1" in
		'all')
			AllFiles

			MiscSoftware

			AllFonts

			InstallVimPlug

			InstallAndUpdateVimPlugins

			InstallLanguageServers
			exit
		;;

		'files')
			AllFiles
			shift
			continue
		;;

		'misc-software')
			MiscSoftware
			shift
			continue
		;;

		'fonts')
			AllFonts
			shift
			continue
		;;

		'vim-plugins')
			InstallVimPlug

			InstallAndUpdateVimPlugins

			shift
			continue
		;;

		########## Files
		'vimrc')
			cp Files/.vimrc ~
			shift
			continue
		;;

		'ideavimrc')
			cp Files/.ideavimrc ~
			shift
			continue
		;;


		'bash-aliases')
			cp Files/.bash_aliases ~ && source ~/.bash_aliases
			shift
			continue
		;;

		'bashrc')
			cp Files/.bashrc ~ && source ~/.bashrc
			shift
			continue
		;;

		'gitconfig')
			cp Files/.gitconfig ~
			shift
			continue
		;;

		'tern-config')
			cp Files/.tern-config ~
			shift
			continue
		;;

		'pylintrc')
			cp Files/.pylintrc ~
			shift
			continue
		;;

		'ipython-config')
			OptionalMkdir ~/.ipython/profile_default
			cp Files/ipython_config.py ~/.ipython/profile_default/ipython_config.py
			shift
			continue
		;;

		'startup.jl')
			OptionalMkdir ~/.julia/config
			cp Files/startup.jl ~/.julia/config/startup.jl
			shift
			continue
		;;

		'init.sage')
			OptionalMkdir ~/.sage
			cp Files/init.sage ~/.sage/init.sage
			shift
			continue
		;;

		'neofetch-config')
			OptionalMkdir ~/.config/neofetch
			cp Files/neofetch_config ~/.config/neofetch/config.conf
			shift
			continue
		;;

		'terminator-config')
			OptionalMkdir ~/.config/terminator
			cp Files/terminator_config ~/.config/terminator/config
			shift
			continue
		;;

		'init.vim')
			OptionalMkdir ~/.config/nvim
			cp Files/init.vim ~/.config/nvim/init.vim
			shift
			continue
		;;

		'coc-settings')
			OptionalMkdir ~/.config/nvim
			cp Files/coc-settings.json ~/.config/nvim/coc-settings.json
			shift
			continue
		;;

		'vim-ultisnips')
			cp -r Files/UltiSnips ~/.config/nvim/
			shift
			continue
		;;

		'xcompose')
			cp Files/.XCompose ~
			shift
			continue
		;;

		########## Misc Software
		'install-neofetch')
			CheckWithWhichAndInstallWithAPT neofetch
			shift
			continue
		;;

		'install-terminator')
			CheckWithWhichAndInstallWithAPT terminator
			shift
			continue
		;;

		'install-bat')
			CheckWithWhichAndInstallWithAPT bat
			shift
			continue
		;;

		'install-fuck')
			which fuck &> /dev/null || sudo pip3 install thefuck
			shift
			continue
		;;

		'install-exa')
			which exa &> /dev/null
			if [ $? -ne 0 ]; then
				# Install rustup if necessary
				which rustc &> /dev/null
				if [ $? -ne 0 ]; then
					curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
				fi

				cargo install exa
			fi
		;;

		'install-unimatrix')
			which unimatrix &> /dev/null
			if [ $? -eq 0 ]; then
				sudo curl -L https://raw.githubusercontent.com/will8211/unimatrix/master/unimatrix.py -o /usr/local/bin/unimatrix
				sudo chmod a+rx /usr/local/bin/unimatrix
			fi
		;;

		########## Plugins
		'install-vim-plug')
			CheckWithWhichAndInstallWithAPT curl

			# Install vim-plug in autoload directory
			curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
			shift
			continue
		;;

		'install-and-update-vim-plugins')
			InstallAndUpdateVimPlugins
			shift
			continue
		;;

		'install-language-servers')
			InstallLanguageServers
			shift
			continue
		;;

		*)
			echo "'$1' is not a recognised argument. See --help or -h for all recognised arguments."
			shift
			continue
		;;

	esac
done
