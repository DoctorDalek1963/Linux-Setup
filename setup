#!/usr/bin/env bash

CheckWithVersionFlagAndInstall() {
	$1 --version &> /dev/null # Redirect stdout and stderr to /dev/null to avoid outputting anything to the terminal
	if [ $? -ne 0 ]; then
		sudo apt install -y $1
	fi
}

OptionalMkdir() {
	# If the directory doesn't exist, make it
	if [ ! -d $1 ]; then
		mkdir -p -- $1
	fi
}

GetFontZip() {
	wget $1
	OptionalMkdir ~/.fonts
	unzip -u -j $2 -d ~/.fonts
	rm $2
}

AllFonts() {
	# Hack
	GetFontZip https://github.com/source-foundry/Hack/releases/download/v3.003/Hack-v3.003-ttf.zip Hack-v3.003-ttf.zip
	# Hack Nerd Font
	GetFontZip https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip Hack.zip
}

RemoveYCMFromVimrc() {
	# We delete the line in .vimrc that loads the YCM plugin, and replace it with a comment
	# The -i flag here means 'in place'. We change the file directly, rather than printing the result to stdout
	# The optional 'in' at the end of Plug allows vim-plug or vundle to be used
	sed "s/^Plug\(in\)\? 'ycm-core\/YouCompleteMe'/\" YCM REMOVED/g" ~/.vimrc -i
}

AllFiles() {
	cp Files/.vimrc ~
	cp Files/.ideavimrc ~
	cp Files/.bash_aliases ~ && source ~/.bash_aliases
	cp Files/.bashrc ~ && source ~/.bashrc
	cp Files/.gitconfig ~
	cp Files/.tern-config ~
	cp Files/.pylintrc ~

	OptionalMkdir ~/.ipython/profile_default
	cp Files/ipython_config.py ~/.ipython/profile_default/ipython_config.py

	OptionalMkdir ~/.config/neofetch
	cp Files/neofetch_config ~/.config/neofetch/config.conf

	OptionalMkdir ~/.config/terminator
	cp Files/terminator_config ~/.config/terminator/config
}

MiscSoftware() {
	CheckWithVersionFlagAndInstall neofetch
	CheckWithVersionFlagAndInstall terminator
}

InstallVimPluginManagers() {
	CheckWithVersionFlagAndInstall curl

	# Install vim-plug in autoload directory
	curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

	# Clone github repo for Vundle into proper directory
	git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
}

InstallAndUpdateVimPlugins() {
	# Vim plug
	vim -c "PlugInstall" -c "qa!"
	vim -c "PlugUpdate" -c "qa!"

	# Vundle
	vim -c "PluginInstall" -c "qa!"
	vim -c "PluginUpdate" -c "qa!"
}

InstallYCMDependencies() {
	sudo apt install -y build-essential cmake vim-nox python3-dev
	sudo apt install -y mono-complete golang nodejs default-jdk npm
	python3 ~/.vim/bundle/YouCompleteMe/install.py --all
}

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
	echo
	echo "$(<Files/setup_help)" # Read the help from a file. This is in quotes to allow for line breaks
	echo
	exit 0
fi

# If no arguments are supplied
if [ $# -eq 0 ]; then
	echo "setup must be suplied with at least one valid argument. See --help or -h for all arguments."
	exit 1
fi

# This is just a big ol' switch statement
while [ $# -ne 0 ]; do
	case "$1" in
		'all')
			AllFiles

			MiscSoftware

			AllFonts

			InstallVimPluginManagers

			InstallAndUpdateVimPlugins

			InstallYCMDependencies
			exit
		;;

		'all-except-ycm')
			AllFiles

			# We do this before installing any vim plugins or even managers, so that YCM doesn't complain
			RemoveYCMFromVimrc

			MiscSoftware

			AllFonts

			InstallVimPluginManagers

			InstallAndUpdateVimPlugins
			exit
		;;

		'files')
			AllFiles
			shift
			continue
		;;

		'remove-ycm-from-vimrc')
			RemoveYCMFromVimrc
			shift
			continue
		;;

		'misc-software')
			MiscSoftware
			shift
			continue
		;;

		'fonts')
			AllFonts
			shift
			continue
		;;

		'vim-plugins')
			InstallVimPluginManagers

			InstallAndUpdateVimPlugins

			shift
			continue
		;;

		########## Files
		'vimrc')
			cp Files/.vimrc ~
			shift
			continue
		;;

		'ideavimrc')
			cp Files/.ideavimrc ~
			shift
			continue
		;;


		'bash-aliases')
			cp Files/.bash_aliases ~ && source ~/.bash_aliases
			shift
			continue
		;;

		'bashrc')
			cp Files/.bashrc ~ && source ~/.bashrc
			shift
			continue
		;;

		'gitconfig')
			cp Files/.gitconfig ~
			shift
			continue
		;;

		'tern-config')
			cp Files/.tern-config ~
			shift
			continue
		;;

		'.pylintrc')
			cp Files/..pylintrc ~
			shift
			continue
		;;

		'ipython_config')
			OptionalMkdir ~/.ipython/profile_default
			cp Files/ipython_config.py ~/.ipython/profile_default/ipython_config.py
			shift
			continue
		;;

		'neofetch-config')
			OptionalMkdir ~/.config/neofetch
			cp Files/neofetch_config ~/.config/neofetch/config.conf
			shift
			continue
		;;

		'terminator-config')
			OptionalMkdir ~/.config/terminator
			cp Files/terminator_config ~/.config/terminator/config
			shift
			continue
		;;

		########## Misc Software
		'install-neofetch')
			CheckWithVersionFlagAndInstall neofetch
			shift
			continue
		;;

		'install-terminator')
			CheckWithVersionFlagAndInstall terminator
			shift
			continue
		;;

		########## Plugins
		'install-vim-plug')
			CheckWithVersionFlagAndInstall curl

			# Install vim-plug in autoload directory
			curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
			shift
			continue
		;;

		'install-vundle')
			# Clone github repo for Vundle into proper directory
			git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
			shift
			continue
		;;

		'install-and-update-vim-plugins')
			InstallAndUpdateVimPlugins
			shift
			continue
		;;

		'install-ycm-depend')
			InstallYCMDependencies
			shift
			continue
		;;

		*)
			echo "'$1' is not a recognised argument. See --help or -h for all recognised arguments."
			shift
			continue
		;;

	esac
done
